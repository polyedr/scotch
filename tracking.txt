https://scotch.io/tutorials/build-a-restful-api-with-flask-the-tdd-way
workon flasktdd

export DATABASE_URL="postgresql://postgres:postgrespassword1@localhost:5432/flask_api"

2 out of 5 tests should pass. We've now handled the GET and POST requests successfully. 
These tests were not passed

17.12.2018
secret key:
https://stackoverflow.com/questions/34902378/where-do-i-get-a-secret-key-for-flask

curl -H "Content-Type: application/json" -X POST -d '{"name": "Go to London for vacations"}' http://127.0.0.1:5000/bucketlists/

https://scotch.io/tutorials/build-a-restful-api-with-flask-the-tdd-way-part-2
User Login
A user will have to login to gain access to our API. Currently, we are lacking this login functionality. Let's start with some tests. We'll add two more tests at the bottom of our test_auth.py as follows:

If you run the tests, you will notice that the login tests pass, but the bucketlist one still fail. It's time to refactor this tests.
Tests were not passed properly.

(flasktddenv) user@linux-wq94:~/Desktop/Programming/Flask/scotch> flake8 app/models.py
app/models.py:53:17: F821 undefined name 'current_app'
https://stackoverflow.com/questions/14299497/flask-app-object-inside-blueprint

Make a POST request to localhost:5000/bucketlists/, specifying the name of the bucketlist. Click send. 
